// Mocks generated by Mockito 5.4.5 from annotations
// in leadloq/test/email_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:leadloq/core/error/failures.dart' as _i5;
import 'package:leadloq/features/leads/domain/entities/filter_state.dart'
    as _i6;
import 'package:leadloq/features/leads/domain/repositories/filter_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FilterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilterRepository extends _i1.Mock implements _i3.FilterRepository {
  MockFilterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.LeadsFilterState>> getFilterState() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilterState,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.LeadsFilterState>>.value(
                _FakeEither_0<_i5.Failure, _i6.LeadsFilterState>(
          this,
          Invocation.method(
            #getFilterState,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.LeadsFilterState>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveFilterState(
          _i6.LeadsFilterState? filterState) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFilterState,
          [filterState],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #saveFilterState,
            [filterState],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearFilterState() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearFilterState,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearFilterState,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.SortState>> getSortState() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSortState,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.SortState>>.value(
            _FakeEither_0<_i5.Failure, _i6.SortState>(
          this,
          Invocation.method(
            #getSortState,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.SortState>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveSortState(
          _i6.SortState? sortState) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSortState,
          [sortState],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #saveSortState,
            [sortState],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearSortState() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearSortState,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearSortState,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.LeadsUIState>> getUIState() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUIState,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.LeadsUIState>>.value(
                _FakeEither_0<_i5.Failure, _i6.LeadsUIState>(
          this,
          Invocation.method(
            #getUIState,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.LeadsUIState>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveUIState(
          _i6.LeadsUIState? uiState) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUIState,
          [uiState],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #saveUIState,
            [uiState],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearUIState() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearUIState,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearUIState,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updateStatusFilter(
          String? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStatusFilter,
          [status],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateStatusFilter,
            [status],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updateSearchFilter(
          String? search) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSearchFilter,
          [search],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateSearchFilter,
            [search],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updateCandidatesOnlyFilter(
          bool? candidatesOnly) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCandidatesOnlyFilter,
          [candidatesOnly],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateCandidatesOnlyFilter,
            [candidatesOnly],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updateCalledTodayFilter(
          bool? calledToday) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCalledTodayFilter,
          [calledToday],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateCalledTodayFilter,
            [calledToday],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> addHiddenStatus(String? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHiddenStatus,
          [status],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #addHiddenStatus,
            [status],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> removeHiddenStatus(
          String? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeHiddenStatus,
          [status],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #removeHiddenStatus,
            [status],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearHiddenStatuses() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearHiddenStatuses,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearHiddenStatuses,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updatePageSize(int? pageSize) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePageSize,
          [pageSize],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updatePageSize,
            [pageSize],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getPageSize() => (super.noSuchMethod(
        Invocation.method(
          #getPageSize,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getPageSize,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> addSelectedLead(String? leadId) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSelectedLead,
          [leadId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #addSelectedLead,
            [leadId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> removeSelectedLead(
          String? leadId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeSelectedLead,
          [leadId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #removeSelectedLead,
            [leadId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearSelectedLeads() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearSelectedLeads,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearSelectedLeads,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> toggleSelectionMode(
          bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleSelectionMode,
          [enabled],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #toggleSelectionMode,
            [enabled],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveScrollPosition(
          double? position) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveScrollPosition,
          [position],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #saveScrollPosition,
            [position],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, double?>> getScrollPosition() =>
      (super.noSuchMethod(
        Invocation.method(
          #getScrollPosition,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, double?>>.value(
            _FakeEither_0<_i5.Failure, double?>(
          this,
          Invocation.method(
            #getScrollPosition,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, double?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearScrollPosition() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearScrollPosition,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearScrollPosition,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
